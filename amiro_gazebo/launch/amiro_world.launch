<launch>

  <arg name="robot_name" default="amiro" />
  <arg name="robot_position" default="-x 0.0 -y 0.0 -z 0.01" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find amiro_gazebo)/worlds/amiro.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find amiro_description)/urdf/amiro.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model $(arg robot_name) -param robot_description $(arg robot_position) "/>

  <!-- ros_control amiro launch file -->
  <!--include file="$(find amiro_control)/launch/amiro_control.launch" /-->
  
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="30.0"/>
      <param name="tf_prefix" type="string" value="$(arg robot_name)"/>
  </node>

</launch>
