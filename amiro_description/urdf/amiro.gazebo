<?xml version="1.0"?>
<robot>

  <!-- ros_control plugin -->
  <!--<gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/amiro</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>-->

  <gazebo>
    <!--<plugin filename="libgazebo_ros_control.so" name="ros_control">
      <robotNamespace></robotNamespace>
    </plugin>-->

    <!--Published by differential_drive_controller-->
    <!--<plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <robotNamespace></robotNamespace>
      <jointName>right_wheel_joint, left_wheel_joint</jointName>
      <updateRate>10.0</updateRate>
      <alwaysOn>true</alwaysOn>
    </plugin>-->

    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>${update_rate}</updateRate>
        <leftJoint>${left_wheel_joint}</leftJoint>
        <rightJoint>${right_wheel_joint}</rightJoint>
        <wheelSeparation>${wheel_sep}</wheelSeparation> <!-- meter -->
        <wheelDiameter>${wheel_dia}</wheelDiameter> <!-- meter -->
        <wheelTorque>1</wheelTorque> <!-- Nm -->
        <!--<odometrySource>1</odometrySource>--> <!-- ? -->
        <commandTopic>${cmd_vel}</commandTopic>
        <odometryTopic>${odom}</odometryTopic>
        <odometryFrame>${odom}</odometryFrame>
        <robotBaseFrame>${base_link}</robotBaseFrame>
        <publishTf>true</publishTf> <!-- Send the tf between odometryFrame and robotBaseFrame -->
        <publishWheelTF>false</publishWheelTF> <!-- Done by robot_state_publisher -->
        <publishWheelJointState>true</publishWheelJointState> <!-- Joint messages for robot_state_publisher -->
        <legacyMode>false</legacyMode>
        <wheelAcceleration>1</wheelAcceleration> <!-- rad/s^2 -->
        <!--gazebo_ros_utils parameter-->
        <rosDebugLevel>info</rosDebugLevel>
    </plugin>
  </gazebo>

  <gazebo>
    <self_collide>0</self_collide>
  </gazebo>

  <!-- Chassi (base and castor) -->
  <gazebo reference="${base_link}">
    <material>Gazebo/Orange</material>
    <collision>
      <surface>
        <contact>
          <collide_without_contact>0</collide_without_contact>
        </contact>
        <friction>
          <ode>
            <!--No friction and very slippery-->
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1</slip1>
            <slip2>1</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
  </gazebo>

  <!-- Right wheel -->
  <gazebo reference="${right_wheel_link}">
<!--    <collision>
      <surface>
        <friction>
          <ode>
            <mu>1</mu>
            <mu2>1</mu2>
            <slip1>0.1</slip1>
            <slip2>0.1</slip2>
          </ode>
        </friction>
      </surface>
    </collision>-->
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- Left wheel -->
  <gazebo reference="${left_wheel_link}">
<!--    <collision>
      <surface>
        <friction>
          <ode>
            <mu>1</mu>
            <mu2>1</mu2>
            <slip1>0.1</slip1>
            <slip2>0.1</slip2>
          </ode>
        </friction>
      </surface>
    </collision>-->
    <material>Gazebo/Black</material>
  </gazebo>

</robot>
