<?xml version="1.0"?>
<!-- Revolute-Revolute Manipulator -->
<robot name="amiro" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="base_mass" value="0.4" /> <!-- (kg) base mass -->
  <xacro:property name="base_diameter" value="0.099" /> <!-- (m) base diameter -->
  <xacro:property name="base_radius" value="${base_diameter / 2}" /> <!-- (m) base radius -->
  <xacro:property name="base_height" value="0.084" /> <!-- (m) base height from bottom of DiWheelDrive + extension + lid -->
  <xacro:property name="base_clearance" value="0.01" /> <!-- (m) space between floor and base -->
  <xacro:property name="wheel_height" value="0.006" /> <!-- (m) wheel height -->
  <xacro:property name="wheel_sep" value="0.069" /> <!-- (m) wheel seperation -->
  <xacro:property name="wheel_dia" value="0.05571" /> <!-- (m) wheel diameter -->
  <xacro:property name="wheel_radius" value="${wheel_dia / 2}" /> <!-- (m) wheel radius -->
  <xacro:property name="wheel_mass" value="0.02" /> <!-- (kg) wheel mass -->
  <xacro:property name="wheel_damping" value="0.1" /> <!-- (?) wheel damping -->
  <xacro:property name="caster_mass" value="0.01" /> <!-- (kg) caster mass -->
  <xacro:property name="caster_dia" value="0.005" /> <!-- (m) caster diameter -->
  <xacro:property name="caster_radius" value="${caster_dia / 2}" /> <!-- (m) caster radius -->
  <xacro:property name="caster_clearance" value="0.001" /> <!-- (m) caster clearance above ground (needed, so that the robot is movable) -->
  <xacro:property name="caster_sep" value="0.072" /> <!-- (m) caster seperation (we assume that there are two symetric caster in the front and back) -->

  <!-- Constant dependent parameters -->
  <xacro:property name="base_link_height" value="${base_clearance + base_height / 2}" /> <!-- base link height -->
  <xacro:property name="caster_link_height" value="${caster_clearance + caster_radius}" /> <!-- caster link height -->
  <!-- http://en.wikipedia.org/wiki/List_of_moment_of_inertia_tensors -->
  <xacro:property name="base_ixx" value="${1/12 * base_mass * (3*base_radius*base_radius+base_height*base_height)}" />
  <xacro:property name="base_iyy" value="${base_ixx}" />
  <xacro:property name="base_izz" value="${1/2*base_mass*base_radius*base_radius}" />
  <xacro:property name="wheel_ixx" value="${1/12 * wheel_mass * (3*wheel_radius*wheel_radius+wheel_height*wheel_height)}" />
  <xacro:property name="wheel_iyy" value="${wheel_ixx}" />
  <xacro:property name="wheel_izz" value="${1/2*wheel_mass*wheel_radius*wheel_radius}" />
  
  <!-- Link, topic and other names -->
  <xacro:property name="base_link" value="base_link" /> <!-- base link -->
  <xacro:property name="left_wheel_link" value="left_wheel_link" /> <!-- wheel link -->
  <xacro:property name="right_wheel_link" value="right_wheel_link" /> <!-- wheel link -->
  <xacro:property name="right_wheel_joint" value="right_wheel_joint" /> <!-- wheel joint -->
  <xacro:property name="left_wheel_joint" value="left_wheel_joint" /> <!-- wheel joint -->
  <xacro:property name="odom" value="odom" /> <!-- odometry topic/tf -->
  <xacro:property name="cmd_vel" value="cmd_vel" /> <!-- differential command  topic -->

  <xacro:property name="update_rate" value="$(arg update_rate)" /> <!-- update rate for the plugins and TFs -->

  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <xacro:include filename="$(find amiro_description)/urdf/amiro.gazebo" />
  <!-- Import Rviz colors -->
  <xacro:include filename="$(find amiro_description)/urdf/materials.xacro" />

  <!-- Base Link -->
  <link name="${base_link}">
    <!-- Base -->
    <collision name='base_collision'>
      <origin xyz="0 0 ${base_link_height}" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius}"/>
      </geometry>
    </collision>

    <visual name='base_visual'>
      <origin xyz="0 0 ${base_link_height}" rpy="0 0 0"/>
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial name='base_inertia'>
      <origin xyz="0 0 ${base_link_height}" rpy="0 0 0"/>
      <mass value="${base_mass}"/>
      <inertia
        ixx="${base_ixx}" ixy="0.0" ixz="0.0"
        iyy="${base_iyy}" iyz="0.0"
        izz="${base_izz}"/>
    </inertial>

    <!-- Front caster -->
    <collision name='caster_front_collision'>
      <origin xyz="${caster_sep / 2} 0 ${caster_link_height}" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>

    <visual name='caster_front_visual'>
      <origin xyz="${caster_sep / 2} 0 ${caster_link_height}" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial name='caster_front_inertia'>
      <origin xyz="${caster_sep / 2} 0 ${caster_link_height}" rpy="0 0 0"/>
      <mass value="${caster_mass}"/>
    </inertial>
    
    <!-- Back caster -->
    <collision name='caster_back_collision'>
      <origin xyz="-${caster_sep / 2} 0 ${caster_link_height}" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>

    <visual name='caster_back_visual'>
      <origin xyz="-${caster_sep / 2} 0 ${caster_link_height}" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_radius}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial name='caster_back_inertia'>
      <origin xyz="-${caster_sep / 2} 0 ${caster_link_height}" rpy="0 0 0"/>
      <mass value="${caster_mass}"/>
    </inertial>
  </link>

  <!-- Left wheel -->
  <joint name="${left_wheel_joint}" type="continuous">
    <parent link="${base_link}"/>
    <child link="${left_wheel_link}"/>
    <origin xyz="0 ${wheel_sep / 2} ${wheel_radius}" rpy="0 ${PI/2} ${PI/2}"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="${wheel_damping}"/>
  </joint>

  <link name="${left_wheel_link}">
    <collision>
      <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      </geometry>
    </collision>

    <visual>
      <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${wheel_ixx}" ixy="0.0" ixz="0.0"
        iyy="${wheel_iyy}" iyz="0.0"
        izz="${wheel_izz}"/>
    </inertial>
  </link>

  <!-- Right wheel -->
  <joint name="${right_wheel_joint}" type="continuous">
    <parent link="${base_link}"/>
    <child link="${right_wheel_link}"/>
    <origin xyz="0 -${wheel_sep / 2} ${wheel_radius}" rpy="0 ${PI/2} ${PI/2}"/>
    <axis xyz="0 0 1"/>
    <dynamics damping="${wheel_damping}"/>
  </joint>

  <link name="${right_wheel_link}">
    <collision>
      <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      </geometry>
    </collision>

    <visual>
      <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <cylinder length="${wheel_height}" radius="${wheel_radius}"/>
      <mass value="${wheel_mass}"/>
      <inertia
        ixx="${wheel_ixx}" ixy="0.0" ixz="0.0"
        iyy="${wheel_iyy}" iyz="0.0"
        izz="${wheel_izz}"/>
    </inertial>
  </link>

</robot>
